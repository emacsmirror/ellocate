Ellocate is a re-implementation of locate written in Emacs-Lisp
Currently this package requires =ivy= for searching, but it shouldn't be too hard to modify it to work with helm or ido

* Comparison
#+caption: Comparison with other file searchers
|                                                             | Ellocate   | Locate (and elisp wrappers like counsel-locate)           | Find (and elisp wrappers like counsel-find)  |
|-------------------------------------------------------------+------------+-----------------------------------------------------------+----------------------------------------------|
| Speed                                                       | Fast       | Fast                                                      | Slow                                         |
| Easy to configure multiple search paths                     | Yes        | No                                                        | Yes (always searches down current directory) |
| Switch search databases used depending on current directory | Yes        | With a lot of effort                                      | N/A                                          |
| Works the same on every platform                            | Yes        | No (Some systems use mlocate while others use GNU locate) | Yes                                          |
| Dependencies                                                | Find       | mlocate or GNU locate                                     | Find                                         |
| Tramp support                                               | I think so | Yes                                                       | Yes                                          |

* Usage
The function =ellocate= scans the directory as specified by =ellocate-scan-dirs= and creates a database file to store the results in.
=ellocate-scan-dirs= is configured like this:
#+BEGIN_SRC emacs-lisp
(setq ellocate-scan-dirs '(("~/" "~/ellocate-home-db")
                           ("/dev/USB" "~/ellocate-usb-drive-db")
                           ;; I want this directory to be re-scanned on first search after every emacs restart by not creating a database file for it
                           ("/dev/USB2" nil)
                           ;; Never make your scan paths overlap like this:
                           ;; ("/dev/USB2/newFolder" nil)
                           ))
#+END_SRC
Where the first element in the list is the directory to scan and the second is in which file to store the search results so that =ellocate= can read read it if Emacs is restarted to give =ellocate= faster initial startup times. If the database is nil, =ellocate= will have to re-scan the directory if run every time Emacs is restarted instead of just reading a database containing the scanned files.

=ellocate-clear= clears all stored databases. This forces =ellocate= to refresh its search entries. Do this if your file-system has changed and you want that reflected in =ellocate=.
